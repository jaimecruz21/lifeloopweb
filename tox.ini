[tox]
envlist = unit, lint

[testenv:unit]
basepython = python
setenv = VIRTUAL_ENV={envdir}
        NO_EVENTLET=1
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
commands = py.test --spec --junitxml=test-reports/junit.xml --cov=lifeloopweb --cov-report term-missing tests/unit/ {posargs}


[testenv:lint]
basepython = python
setenv = VIRTUAL_ENV={envdir}
        NO_EVENTLET=1
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
commands = pylint --rcfile=.pylintrc lifeloopweb/ tests/ --ignore=versions


[testenv:functional]
basepython = python
setenv = VIRTUAL_ENV={envdir}
         NOSE_WITH_COVERAGE=1
         NOSE_COVER_HTML=1
         NOSE_COVER_HTML_DIR=.cover-report
         NOSE_COVER_MIN_PERCENTAGE=90
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
passenv = TEST_*
commands =
  # This is a little clunky but it gets the job done
  docker-compose -f docker-compose.development.yml up -d
  python tests/functional/wait_for_up.py && py.test --spec tests/functional/ {posargs}
  docker-compose -f docker-compose.development.yml down
  docker-compose -f docker-compose.development.yml rm -f
